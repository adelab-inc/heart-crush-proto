syntax = "proto3";

option go_package = "telepathy-server/proto";

import "common.proto";
import "error.proto";

service UserService {
  //  rpc GetMyProfile(GetMyProfileRequest) returns (GetMyProfileResponse) {}
  rpc UpdateUser(UpdateUserRequest) returns (UpdateUserResponse) {}
  //  rpc SetProfile(SetProfileRequest) returns (SetProfileResponse) {}
  //  rpc UpdateConfig(UpdateConfigRequest) returns (UpdateConfigResponse) {}
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse) {}
  rpc CreateInquiry(CreateInquiryRequest) returns (CreateInquiryResponse) {}
  rpc CreateReport(CreateReportRequest) returns (CreateReportResponse) {}
  rpc GetStudents(GetStudentsRequest) returns (GetStudentsResponse) {}
  rpc GetUsersByUuids(GetUsersByUuidsRequest) returns (GetUsersByUuidsResponse) {}
  // {} rpc GetUserByUid(GetUserByUidRequest) returns (GetUserByUidResponse) {}
}

//message GetMyProfileRequest {}
//
//message GetMyProfileResponse {
//  Status status = 1;
//  User user = 2;
//}

/*
profile을 업데이트하는 서비스 -> 기존의 정보와 바뀐 정보를 조합하고 채워넣어
보내주시면 됩니다. profile Image 삭제와 같은 경우에는 마찬가지로 다음과 같이
보내주시면 됩니다. prefix :
"https://storage.googleapis.com/telepathy-server/image/{사진_이름}" 여성 ->
"girlThumbnail.png"과 "girl.png"를 보내주시면 됩니다. 남성 ->
"boyThumbnail.png"과 "boy.png"를 보내주시면 됩니다.
*/
message UpdateUserRequest {
  optional string name = 1;
  optional string description = 2;
  optional string schoolCode = 3;
  repeated ChipItem chips = 4;
  optional string profileImgURL = 5;
  optional string thumbnailImgURL = 6;
  optional string fcmToken = 7; // 서버에만 업데이트 함
  optional string birth = 8;
  optional EGender gender = 9;
  optional bool isInitialized = 10;
  optional Config config = 11;
}

message UpdateUserResponse {
  Status status = 1;
  optional User user = 2;
}


message DeleteUserRequest {
  string reason = 2;
}

message DeleteUserResponse {
  // Error_INVALID_UID,Error_MONGO_DELETE, Error_MONGO_INSERT, Error_NO_ERROR
  Status status = 1;
}

message CreateInquiryRequest {
  string kind = 1;
  string title = 2;
  string content = 3;
  string replyEmail = 4;
  repeated bytes images = 5;
  bool agreement = 6;
}

message CreateInquiryResponse {
  // Error_KST_FAILED, Error_MONGO_INSERT, Error_NO_ERROR
  Status status = 1;
}

message CreateReportRequest {
  string kind = 1;
  string target = 2;
  string problemType = 3;
  string problemDetail = 4;
}
message CreateReportResponse {
  // Error_KST_FAILED, Error_MONGO_INSERT, Error_NO_ERROR
  Status status = 1;
}

message Student {
  string name = 1;
  string profileImgURL = 2;
  string thumbnailImgURL = 3;
}

message StudentsInGrade {
  int32 grade = 1;
  repeated Student student = 2;
}

message GetStudentsRequest {string schoolCode = 1;}

message GetStudentsResponse {
  Status status = 1;
  repeated StudentsInGrade students = 2;
  string schoolCode = 3;
  string shortSchoolName = 4;
}

message GetUsersByUuidsRequest {
  repeated string uuids = 1;
}

message GetUsersByUuidsResponse {
  Status status = 1;
  repeated User users = 2;
}
