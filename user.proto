syntax = "proto3";

option go_package = "telepathy-server/proto";

import "google/protobuf/wrappers.proto";

import "error.proto";

service UserService {
  rpc GetMyProfile(GetMyProfileRequest) returns (GetMyProfileResponse) {}
  rpc UpdateProfile(UpdateProfileRequest) returns (UpdateProfileResponse) {}
  rpc GetMyPage(GetMyPageRequest) returns (GetMyPageResponse) {}
  rpc UpdateConfig(UpdateConfigRequest) returns (UpdateConfigResponse) {}
  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse) {}
  rpc CreateInquiry(CreateInquiryRequest) returns (CreateInquiryResponse) {}
  rpc CreateReport(CreateReportRequest) returns (CreateReportResponse) {}
  rpc GetSchoolUsers(GetSchoolUsersRequest) returns (GetSchoolUsersResponse) {}
}

message Chip {
  string schoolCode = 1;
  string grade = 2;
  string instaAccount = 3;
  string tiktokAccount = 4;
  string mbti = 5;
  repeated string others = 6;
}

message Config {
  google.protobuf.BoolValue heartLock = 1;
  google.protobuf.BoolValue systemAlarm = 2;
  google.protobuf.BoolValue questionAlarm = 3;
  google.protobuf.BoolValue bluetoothAlarm = 4;
  google.protobuf.BoolValue likeAlarm = 5;
}

message GetMyProfileRequest { string uid = 1; }

message GetMyProfileResponse {
  Status status = 1;
  string name = 2;
  Chip chip = 3;
  bytes profileImg = 4;
  string description = 5;
}

message UpdateProfileRequest {
  string uid = 1;
  google.protobuf.StringValue name = 2;
  Chip chip = 3;
  bytes profileImg = 4;
  google.protobuf.StringValue description = 5;
}

message UpdateProfileResponse {
  Status status = 1; // Error_INVALID_UID, Error_FILE_UPLOAD_ERROR,
                     // MONGO_UPDATE, Error_NO_ERROR
}

message UpdateConfigRequest {
  Status status = 1;
  string uid = 2;
  Config config = 3;
}

message UpdateConfigResponse {
  Status status = 1; // Error_INVALID_UID, MONGO_UPDATE, Error_NO_ERROR
}

message GetMyPageRequest { string uid = 1; }

message GetMyPageResponse {
  // Error_INVALID_UID, Error_USER_NOT_REGISTERED, Error_NO_ERROR
  Status status = 1;
  string name = 2;
  string description = 3;
  string birth = 4;
  Chip chip = 5;
  Config config = 6;
  int32 bestFriends = 7;
}

message DeleteUserRequest {
  string uid = 1;
  string reason = 2;
}

message DeleteUserResponse {
  // Error_INVALID_UID,Error_MONGO_DELETE, Error_MONGO_INSERT, Error_NO_ERROR
  Status status = 1;
}

message CreateInquiryRequest {
  string uid = 1;
  string kind = 2;
  string title = 3;
  string content = 4;
  string replyEmail = 5;
  repeated bytes images = 6;
  bool agreement = 7;
}

message CreateInquiryResponse {
  // Error_KST_FAILED, Error_MONGO_INSERT, Error_NO_ERROR
  Status status = 1;
}

message CreateReportRequest {
  string uid = 1;
  string kind = 2;
  string target = 3;
  string problemType = 4;
  string problemDetail = 5;
}
message CreateReportResponse {
  // Error_KST_FAILED, Error_MONGO_INSERT, Error_NO_ERROR
  Status status = 1;
}

message Student {
  string uid = 1;
  string name = 2;
}

message Students {
  int32 grade = 1;
  repeated Student student = 2;
}

message GetSchoolUsersRequest { string schoolCode = 1; }

message GetSchoolUsersResponse {
  Status status = 1;
  repeated Students students = 2;
}