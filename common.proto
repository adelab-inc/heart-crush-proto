syntax = "proto3";

option go_package = "heart-crush-server/proto";

import "google/protobuf/timestamp.proto";

// Profile image size
// width: 1600, height: 1600,
// thumb size
// width: 360, height: 360,

enum ESchoolType {
  EST_UNSPECIFIED = 0;
  EST_ELEMENTARY = 1;
  EST_MIDDLE = 2;
  EST_HIGH = 3;
  EST_UNIVERSITY = 4;
}

enum EChipType {
  ECT_UNSPECIFIED = 0;
  ECT_OTHER = 1;
  ECT_SCHOOL_SHORT_NAME = 2;
  ECT_GRADE = 3;
  ECT_INSTA_ACCOUNT = 4;
  ECT_TIKTOK_ACCOUNT = 5;
  ECT_MBTI = 6;
}

enum EGender {
  EG_UNSPECIFIED = 0;
  EG_MALE = 1;
  EG_FEMALE = 2;
}

message ChipItem {
  EChipType type = 1;
  string text = 2;
  optional string image_url = 3;
}
message Config {
  optional bool heart_lock = 1;
  optional bool system_noti = 2;
  optional bool question_noti = 3;
  optional bool bluetooth_noti = 4;
  optional bool heart_noti = 5;
}


enum EUserStatus {
  EUS_UNSPECIFIED = 0;
  EUS_NOT_REGISTERED = 1;
  // 정상적인 유저
  EUS_VALID = 2; // 정상적인 유저의 경우
  EUS_BANNED = 3;    // 유저가 이용제한(임시 정지)된 경우
  EUS_FORBIDDEN = 4; // 유저가 이용정지(영구 정지)된 경우
}

message User {
  string uid = 1;
  Profile default_profile = 2;
  optional Profile anonymous_profile = 3; // only me
  optional Profile crush_profile = 4; // only me
  repeated ChipItem chips = 5;
  EGender gender = 6;
  optional string birth = 7;        // only me, 20030407
  optional string phone_number = 8;  // only me, E.164
  optional string phone_number_hash = 9;
  optional string email = 10;        // only me
  optional Config config = 11;       // only me
  repeated User friends = 12;                    // only me
  repeated User best_friends = 13;                  // only me
  bool asked_to_update_profile = 14;                   // only me
  optional google.protobuf.Timestamp created_at = 15; // only me
  optional google.protobuf.Timestamp updated_at = 16; // only me, UnixTime
  optional School school = 17;
  int32 school_grade = 18;                            //  몇학년인지, 0: 졸업생 (기본값)
  repeated BlockedProfile blocked_profiles = 19; // only me, 공개 프로필 차단 리스트 (공개 프로필을 차단하더라도 익명, 짝사랑은 차단 안됨)
  repeated BlockedProfile anonymous_blocked_profiles = 20; //  only me
  repeated BlockedProfile crush_blocked_profiles = 21; // only me
  EUserStatus status = 22;
  string fcm_token = 23; // only me
}

message BlockedProfile {
  string profile_id = 1;
  google.protobuf.Timestamp blocked_at = 2;
}

enum EProfileType {
  EPT_UNSPECIFIED = 0;
  EPT_DEFAULT = 1; // 일반 유저
  EPT_ANONYMOUS = 2; // 익명 유저
  EPT_CRUSH = 3; // 짝사랑 익명 유저
}

message Profile {
  string id = 1;
  EProfileType type = 2;
  string name = 3;
  EGender gender = 4; // 데이터베이스에는 저장되지 않지만 클라이언트로 넘겨줄때는 항상 포함 시켜야 함
  optional string description = 5;
  optional string profile_img_url = 6;
  optional string thumbnail_img_url = 7;
  optional string owner_uid = 8; // only me, or crush 공개 상태일 때
  optional google.protobuf.Timestamp crush_end_at = 9; // only me
  optional google.protobuf.Timestamp created_at = 10; // only me, 짝사랑 프로필일 경우 짝사랑 시작일을 겸함
  optional string crush_uid = 11; // only me, crushed user
  optional string crush_reason = 12; // only me, crushed user
}

message School {
  string code = 1;
  string name = 2;
  string short_name = 3;
  string address = 4;
  ESchoolType type = 5;
}


enum ESecurityLogType {
  ESLT_UNSPECIFIED = 0;
  ESLT_USER_CREATION = 1;
  ESLT_USER_ACTION = 2;
  ESLT_INVALID_PASSWORD = 3;
  ESLT_INVALID_PHONE_NUMBER = 4;
}
