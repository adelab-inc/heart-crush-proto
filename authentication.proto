syntax = "proto3";

// package user;
option go_package = "telepathy-server/proto";

import "common.proto";
import "error.proto";

service AuthService {
  rpc CreateAuthCode(CreateAuthCodeRequest) returns (CreateAuthCodeResponse) {}
  rpc ValidateAuthCode(ValidateAuthCodeRequest)
      returns (ValidateAuthCodeResponse) {}
  rpc SignUp(SignUpRequest) returns (SignUpResponse) {}
  rpc LoginWithCode(LoginWithCodeRequest) returns (LoginResponse) {}
  rpc LoginWithPassword(LoginWithPasswordRequest) returns (LoginResponse) {}
  rpc LockUser(LockUserRequest) returns (LockUserResponse) {}
  rpc EmailRegister(EmailRegisterRequest) returns (EmailRegisterResponse) {}
  rpc CreateEmailAuthCode(CreateEmailAuthCodeRequest)
      returns (CreateEmailAuthCodeResponse) {}
  rpc ValidateEmailAuthCode(ValidateEmailAuthCodeRequest)
      returns (ValidateEmailAuthCodeResponse) {}
  rpc LockEmailUser(LockEmailUserRequest) returns (LockEmailUserResponse) {}
  rpc UpdatePhoneNumber(UpdatePhoneNumberRequest)
      returns (UpdatePhoneNumberResponse) {}
}

message AuthUser {
  string uid = 1;
  string phone = 2;
  string password = 3;
  int64 createdAt = 4;      // UnixTime -> change to localtime (ex. kst)
  int64 phoneUpdatedAt = 5; // UnixTime
  int64 passwordUpdatedAt = 6;
}

// * Phone을 string으로 대체. e164 포맷 사용
// message Phone {
//   string phoneNumber = 1; // 전화번호 01012341234
//   string countryCode = 2; // 국가코드 ex) US, KR
// }

message Term {
  string uid = 1;
  bool agree = 2;
  int64 createdAt = 3; // UnixTime -> change to localtime (ex. kst)
  int64 updatedAt = 4; // UnixTime
}

/* CreateAuthCode */

message CreateAuthCodeRequest { string phone = 1; }

message CreateAuthCodeResponse { // info: user가 lock이 된 경우, status는 false
  Status status = 1; // REQUIREDFIELD_MISSING, UNEXPECTED_ERROR, USER_LOCKED,
                     // SMS_SEND_ERROR, UNEXPECTED_ERROR, NO_ERROR
  bool isLocked = 2; // user가 lock이 됐는지 확인
  int32 lockedRemainedTick = 3; // unit is second, 남은 시간
}

/* CreateAuthCode */
/* ValidateAuthCode */

message ValidateAuthCodeRequest {
  string phone = 1;
  string code = 2;
}

message ValidateAuthCodeResponse {
  Status status =
      1; // ABNORMAL_APPROACH, UNEXPECTED_ERROR, AUTHENTICATE_FAILED, NO_ERROR
}

/* ValidateAuthCode */
/* SignUpRequest */

/*
SignUpRequest : {
    user: {
        uid: "",
        name: "윤민우",
        gender: false,
        birth: "20030407"
        Phone: "01041948536"
        createdAt: 	0,
        updatedAt: 	0,
    },
    phone: {
        phoneNumber: "01041948536",
        countryNumber: "82"
    }
    password: "testPassword"
}
*/
message SignUpRequest { // user.uid / user.createdAt / user.updatedAt not needed
                        // in this request
  User user = 1;
  string phone = 2;
  string password = 3;
}

message SignUpResponse {
  Status status = 1; // USER_ALREADY_REGISTERED, UNEXPECTED_ERROR, NO_ERROR
  string uid = 2;
  string token = 3;
}

/* SignUpRequest */
/* LoginWithCode & LoginWithPassword */

message LoginWithCodeRequest { // all fields required
  string phone = 1;
  string code = 2;
}

message LoginWithPasswordRequest { // all fields required
  string phone = 1;
  string password = 2;
}

message LoginResponse {
  Status status =
      1; // USER_NOT_REGISTERED, UNEXPECTED_ERROR, AUTHENTICATE_FAILED, NO_ERROR
  string uid = 2;
  bool isLocked = 3;            // user가 lock이 됐는지 확인
  int32 lockedRemainedTick = 4; // unit is second, 남은 시간
}

/* LoginWithCode & LoginWithPassword */
/* LockUser */

message LockUserRequest { // all fields required
  string phone = 1;
  int32 tick = 2; // unit is second
}

message LockUserResponse {
  Status status = 1; // UNEXPECTED_ERROR, NO_ERROR
}

/* LockUser */
/* Email */
// 내 프로필 설정 & 계정 정보 -> 이메일 입력하기 // 해당 과정에서 사용하시면
// 됩니다!

message EmailRegisterRequest {
  string uid = 1;
  string email = 2;
}

message EmailRegisterResponse { Status status = 1; }

/* Email */
/* CreateEmailAuthCode */

message CreateEmailAuthCodeRequest { string email = 1; }

message
CreateEmailAuthCodeResponse { // info: user가 lock이 된 경우, status는 false
  Status status = 1; // REQUIREDFIELD_MISSING, UNEXPECTED_ERROR, USER_LOCKED,
                     // SMS_SEND_ERROR, UNEXPECTED_ERROR, NO_ERROR
  bool isLocked = 2; // user가 lock이 됐는지 확인
  int32 lockedRemainedTick = 3; // unit is second, 남은 시간
}

/* CreateEmailAuthCode */
/* ValidateEmailAuthCode */

message ValidateEmailAuthCodeRequest {
  string email = 1;
  string code = 2;
}

message ValidateEmailAuthCodeResponse {
  Status status =
      1; // ABNORMAL_APPROACH, UNEXPECTED_ERROR, AUTHENTICATE_FAILED, NO_ERROR
  string uid = 2;
}

/* ValidateEmailAuthCode */
/* LockEmailUser */

message LockEmailUserRequest { // all fields required
  string email = 1;
  int32 tick = 2; // unit is second
}

message LockEmailUserResponse {
  Status status = 1; // UNEXPECTED_ERROR, NO_ERROR
}

/* LockEmailUser */
/* UpdatePhoneNumber */

message UpdatePhoneNumberRequest {
  string uid = 1;
  string phone = 2;
}

message UpdatePhoneNumberResponse { Status status = 1; }
/* UpdatePhoneNumber */