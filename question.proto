syntax = "proto3";

option go_package = "telepathy-server/proto";

import "google/protobuf/timestamp.proto";

import "error.proto";
import "common.proto";

service QuestionService {
  rpc CreateQuestion(CreateQuestionRequest) returns (CreateQuestionResponse) {}
  rpc GetQuestions(GetQuestionsRequest) returns (GetQuestionsResponse) {}
  rpc UpdateReply(UpdateReplyRequest) returns (UpdateReplyResponse) {}
  rpc UpdateQuestionRead(UpdateQuestionReadRequest)
      returns (UpdateQuestionReadResponse) {}
  rpc DeleteQuestion(DeleteQuestionRequest) returns (DeleteQuestionResponse) {}
  rpc GetRandomQuestion(GetRandomQuestionRequest) returns (GetRandomQuestionResponse) {}
}

enum EQuestionType {
  EQT_GETTOKNOW = 0;
  EQT_BALANCE = 1;
  EQT_CHOOSE = 2;
}

message Option {
  int32 idx = 1;
  string text = 2;
}

message Content {
  EQuestionType questionType = 1;
  string questionTitle = 2;
  repeated Option questionOptions = 3;
  Option answer = 4;
}

message QuestionCard {
  string qId = 1;
  string senderId = 2;
  string displayName = 3;
  bool isHideName = 4;
  string receiverId = 5;
  bool isRead = 6;
  bool isReply = 7;
  Content content = 8;
  EGender gender = 9; // false is male, true is female
  google.protobuf.Timestamp created_at = 10;
}

// uid는 metadata로
message CreateQuestionRequest {
  string receiverId = 1;
  string displayName = 2;
  bool IsHideName = 3;
  Content content = 4;
}

message CreateQuestionResponse { Status status = 1; }

// uid는 metadata로
message GetQuestionsRequest {}

message GetQuestionsResponse {
  Status status = 1;
  repeated QuestionCard sentCard = 2;
  repeated QuestionCard receivedCard = 3;
}

message UpdateReplyRequest {
  string qId = 1;
  Option answer = 2;
}

message UpdateReplyResponse { Status status = 1; }

message UpdateQuestionReadRequest { string qId = 1; }

message UpdateQuestionReadResponse { Status status = 1; }

message DeleteQuestionRequest {
  string qId = 1;
  bool isSender = 2;
}

message DeleteQuestionResponse { Status status = 1; }

message GetRandomQuestionRequest {
  EQuestionType questionType = 1;
  string targetUid = 2;
}

message GetRandomQuestionResponse { 
  Status status = 1;
  Content content = 2; // answer는 null 값으로 들어옴!
}
