syntax = "proto3";

option go_package = "heart-crush-server/proto";

// import "common.proto";
import "google/protobuf/timestamp.proto";
import "error.proto";

enum ENotificationType {
  ENT_UNSPECIFIED = 0;
  ENT_SYSTEM = 1;
  //  ENT_BLUETOOTH = 2; // 서버측에서 알림 저장하거나 보낼필요 없음
  ENT_HEART = 2;
  ENT_QUESTION = 3;
  ENT_FRIEND = 4; // accepted, requested: notification + data, rejected, canceled: only data
  ENT_CHAT = 5;
}

service NotificationService {
  rpc GetNotifications(GetNotificationsRequest) returns (GetNotificationsResponse) {}
  rpc ReadNotifications(ReadNotificationsRequest) returns (ReadNotificationsResponse) {}
}

// * Entity
message Notification {
  string id = 1;
  optional ENotificationType type = 2;
  optional string title = 3;
  optional string body = 4;
  optional bool is_read = 5;
  optional string data = 6;
  optional google.protobuf.Timestamp created_at = 7;
}

// * Request & Response
message GetNotificationsRequest {}
message GetNotificationsResponse {
  bool success = 1;
  repeated Notification notifications = 2;
  optional EError error = 3;
}

message ReadNotificationsRequest {repeated string notificationIds = 1;}
message ReadNotificationsResponse {
  bool success = 1;
  optional EError error = 2;
}
