syntax = "proto3";

option go_package = "heart-crush-server/proto";

// import "common.proto";
import "google/protobuf/timestamp.proto";
import "error.proto";

enum ENotificationType {
  ENT_UNSPECIFIED = 0;
  ENT_SYSTEM = 1;
  ENT_HEART = 20; // 상대가 나를 짝사랑 설정했을 시 (하트를 보냈을때)
  ENT_HEART_MATCH_RESULT = 21; // match 결과 확인하라는 알림
  ENT_QUESTION_SENT = 30;
  ENT_QUESTION_ANSWERED = 31;
  ENT_FRIEND_REQUESTED = 40; // notification + data
  ENT_FRIEND_ACCEPTED = 41;  // notification + data
  ENT_FRIEND_REJECTED = 42; // only data
  ENT_FRIEND_CANCELED = 43; // only data
  ENT_CHAT = 50; //
  ENT_BLE_BUMP = 60; // BLE Bump
}

service NotificationService {
  rpc GetNotifications(GetNotificationsRequest) returns (GetNotificationsResponse) {} // 25개씩 불러옴
  rpc ReadNotifications(ReadNotificationsRequest) returns (ReadNotificationsResponse) {}
}


// * Entity
message Notification {
  string id = 1;
  optional ENotificationType type = 2;
  optional string title = 3;
  optional string body = 4;
  optional bool is_read = 5;
  optional string data = 6; // always send, chat: Message, friend: FriendRequest, question: Question. heart: Profile, ENT_BLE_BUMP: BleBump
  optional google.protobuf.Timestamp created_at = 7;
}

// * Request & Response
message GetNotificationsRequest {
  optional google.protobuf.Timestamp before = 1;
}
message GetNotificationsResponse {
  bool success = 1;
  bool has_more = 2;
  repeated Notification notifications = 3;
  optional EError error = 4;
}

message ReadNotificationsRequest {repeated string notificationIds = 1;}
message ReadNotificationsResponse {
  bool success = 1;
  optional EError error = 2;
}
