syntax = "proto3";

option go_package = "telepathy-server/proto";

import "google/protobuf/timestamp.proto";
import "common.proto";
import "error.proto";

service FriendService {
  // 주기적으로(앱을 처음 키는 시점 정도로) 추천친구를 가져오는 서비스
  rpc GetRecommendFriendsUID(GetRecommendFriendsUIDRequest)
      returns (GetRecommendFriendsUIDResponse) {}
  // 제공된 추천친구 uid들을 기반으로 친구정보를 가져오는 서비스
  rpc GetRecommendFriends(GetRecommendFriendsRequest)
      returns (GetRecommendFriendsResponse) {}
  rpc GetBlockedFriends(GetBlockedFriendsRequest)
      returns (GetBlockedFriendsResponse) {}
  rpc CreateBlockedFriend(CreateBlockedFriendRequest)
      returns (CreateBlockedFriendResponse) {}
  rpc DeleteBlockedFriend(DeleteBlockedFriendRequest)
      returns (DeleteBlockedFriendResponse) {}
  rpc GetBestFriends(GetBestFriendsRequest) returns (GetBestFriendsResponse) {}
  rpc UpdateBestFriends(UpdateBestFriendsRequest)
      returns (UpdateBestFriendsResponse) {}
  rpc CreateBestFriend(CreateBestFriendRequest)
      returns (CreateBestFriendResponse) {}
  rpc CreateCrush(CreateCrushRequest) returns (CreateCrushResponse) {}
  rpc GetCrush(GetCrushRequest) returns (GetCrushResponse) {}
  rpc GetWhoCrushMe(GetWhoCrushMeRequest) returns (GetWhoCrushMeResponse) {}
}

// message RecommendedFriends {
//   string uid = 1;
//   string name = 2;
//   string schoolShortName = 3;
//   int32 grade = 4;
//   string thumbnailImageURL = 5;
//   string profileImageURL = 6;
// }

message BestFriendRequest {
  string uid = 1;
  bool alarm = 2;
}

// message BestFriendResponse {
//   string uid = 1;
//   string name = 2;
//   string schoolShortName = 3;
//   string description = 4;
//   string thumbnailImageURL = 5;
//   string profileImageURL = 6;
//   repeated ChipItem chip = 7;
//   bool alarm = 8;
// }

message CrushMe {
  string friendId = 1;
  string displayName = 2;
  string reason = 3;
  EGender gender = 5;
  google.protobuf.Timestamp timerEndAt = 6;
}

message GetRecommendFriendsUIDRequest { repeated string phoneBookFriends = 1; }

message GetRecommendFriendsUIDResponse {
  Status status = 1;
  repeated string recommendedFriendsUID = 2;
}

message GetRecommendFriendsRequest {
  repeated string recommendedFriendsUID = 1;
}

message GetRecommendFriendsResponse {
  Status status = 1;
  repeated User recommendedFriends = 2;
}

message GetBlockedFriendsRequest {}

message GetBlockedFriendsResponse {
  Status status = 1;
  repeated User blockedFriends = 2;
}

message CreateBlockedFriendRequest { string friendId = 1; }

message CreateBlockedFriendResponse { Status status = 1; }

message DeleteBlockedFriendRequest { string friendId = 2; }

message DeleteBlockedFriendResponse { Status status = 1; }

message GetBestFriendsRequest {}

message GetBestFriendsResponse {
  Status status = 1;
  repeated User bestFriends = 2;
}

message UpdateBestFriendsRequest { repeated BestFriendRequest bestFriends = 2; }

message UpdateBestFriendsResponse { Status status = 1; }

message CreateCrushRequest {
  string friendId = 2;
  string displayName = 3;
  string reason = 4;
}

message CreateCrushResponse { Status status = 1; }

message GetCrushRequest {}

message GetCrushResponse {
  Status status = 1;

  // 짝사랑 대상의 정보
  User crushUser = 2;
  google.protobuf.Timestamp timerEndAt = 3; // timer가 끝나는 시점

  // 나의 익명 정보
  string displayName = 4;
  string reason = 5; // 짝사랑 이유
  string thumbnailImageURL = 6;
  string profileImageURL = 7;
}

message GetWhoCrushMeRequest {}

message GetWhoCrushMeResponse {
  Status status = 1;
  repeated CrushMe friendsWhoCrushMe = 2;
}

message CreateBestFriendRequest { string friendId = 1; }

message CreateBestFriendResponse { Status status = 1; }
